local player = game.Players.LocalPlayer

local playerGui = player.PlayerGui

local hotbar = playerGui:FindFirstChild("Hotbar")

local backpack = hotbar:FindFirstChild("Backpack")

local hotbarFrame = backpack:FindFirstChild("Hotbar")

local baseButton = hotbarFrame:FindFirstChild("1").Base

local ToolName = baseButton.ToolName


ToolName.Text = "Y Barrage"


local player = game.Players.LocalPlayer

local playerGui = player.PlayerGui

local hotbar = playerGui:FindFirstChild("Hotbar")

local backpack = hotbar:FindFirstChild("Backpack")

local hotbarFrame = backpack:FindFirstChild("Hotbar")

local baseButton = hotbarFrame:FindFirstChild("2").Base

local ToolName = baseButton.ToolName


ToolName.Text = "Golden Ratio"


local player = game.Players.LocalPlayer

local playerGui = player.PlayerGui

local hotbar = playerGui:FindFirstChild("Hotbar")

local backpack = hotbar:FindFirstChild("Backpack")

local hotbarFrame = backpack:FindFirstChild("Hotbar")

local baseButton = hotbarFrame:FindFirstChild("3").Base

local ToolName = baseButton.ToolName


ToolName.Text = "Fatal X"


local player = game.Players.LocalPlayer

local playerGui = player.PlayerGui

local hotbar = playerGui:FindFirstChild("Hotbar")

local backpack = hotbar:FindFirstChild("Backpack")

local hotbarFrame = backpack:FindFirstChild("Hotbar")

local baseButton = hotbarFrame:FindFirstChild("4").Base

local ToolName = baseButton.ToolName


ToolName.Text = "Infinity"


local Players = game:GetService("Players")

local player = Players.LocalPlayer

local playerGui = player:WaitForChild("PlayerGui")


local function findGuiAndSetText()

    local screenGui = playerGui:FindFirstChild("ScreenGui")

    if screenGui then

        local magicHealthFrame = screenGui:FindFirstChild("MagicHealth")

        if magicHealthFrame then

            local textLabel = magicHealthFrame:FindFirstChild("TextLabel")

            if textLabel then

                textLabel.Text = "Absolute Infinity"

            end

        end

    end

end


playerGui.DescendantAdded:Connect(findGuiAndSetText)

findGuiAndSetText()


local animationId = 10468665991


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then


local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end

-- First move
local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://18716698376"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0.2


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)


    end

end


humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 18716113810


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then


local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end

-- second move
local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://18716673362"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0.2


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(0.9)


    end

end


humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 18716022049


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then


local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end

-- third move
local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://15391323441"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 5.3


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(2.9)


delay(1.8, function()

    Anim:Stop()

end)


    end

end


humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 18716033506


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end

-- fourth move (last move)
local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://18716734026"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0.1


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)


    end

end

humanoid.AnimationPlayed:Connect(onAnimationPlayed)

local animationId = 18716004830


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end

-- serious punch

local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://12983333733"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 2

Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(0.5)


    end

end

humanoid.AnimationPlayed:Connect(onAnimationPlayed)

local animationId = 12460977270


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end

-- Wallcombo
local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://15944317351"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0.2


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)


    end

end

humanoid.AnimationPlayed:Connect(onAnimationPlayed)

local animationId = 18716197426


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


-- death counter
local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://13073745835"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0.3


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(0.2)


    end

end

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 12467789963


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end

-- ult anim
local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://17292505729"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)

    end

end

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 10479335397


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end

-- Dash anim
local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://17838006839"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0.120


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(0.7)


delay(1.2, function()

    Anim:Stop()

end)


    end

end

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 10503381238


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end

-- Uppercut anim
local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://14001963401"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0.2


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)


    end

end

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 10470104242


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end

-- Downslam anim
local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://17858878027  "

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0.1120


wait(0.2)

Anim:Play()

Anim:AdjustSpeed(0.10)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)


    end

end

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local Players = game:GetService("Players")

local player = Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")

-- Garous m1s

local animationIdsToStop = {

    [18715994424] = true,

    [18715998497] = true,

    [18715999597] = true,

    [18716001119] = true,

}

-- rechange m1s

local replacementAnimations = {

    ["18715994424"] = "rbxassetid://13491635433 ",

    ["18715998497"] = "rbxassetid://13295919399",

    ["18715999597"] = "rbxassetid://17889461810",

    ["18716001119"] = "rbxassetid://17889458563",

}


local queue = {}

local isAnimating = false


local function playReplacementAnimation(animationId)

    if isAnimating then

        table.insert(queue, animationId)

        return

    end

   

    isAnimating = true

    local replacementAnimationId = replacementAnimations[tostring(animationId)]

    if replacementAnimationId then

        local AnimAnim = Instance.new("Animation")

        AnimAnim.AnimationId = replacementAnimationId

        local Anim = humanoid:LoadAnimation(AnimAnim)

        Anim:Play()

       

        Anim.Stopped:Connect(function()

            isAnimating = false

            if #queue > 0 then

                local nextAnimationId = table.remove(queue, 1)

                playReplacementAnimation(nextAnimationId)

            end

        end)

    else

        isAnimating = false

    end

end


local function stopSpecificAnimations()

    for _, track in ipairs(humanoid:GetPlayingAnimationTracks()) do

        local animationId = tonumber(track.Animation.AnimationId:match("%d+"))

        if animationIdsToStop[animationId] then

            track:Stop()

        end

    end

end


local function onAnimationPlayed(animationTrack)

    local animationId = tonumber(animationTrack.Animation.AnimationId:match("%d+"))

    if animationIdsToStop[animationId] then

        stopSpecificAnimations()

        animationTrack:Stop()

       

        local replacementAnimationId = replacementAnimations[tostring(animationId)]

        if replacementAnimationId then

            playReplacementAnimation(animationId)

        end

    end

end


humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoidRootPart = character:WaitForChild("HumanoidRootPart")


local function onBodyVelocityAdded(bodyVelocity)

    if bodyVelocity:IsA("BodyVelocity") then

        bodyVelocity.Velocity = Vector3.new(bodyVelocity.Velocity.X, 0, bodyVelocity.Velocity.Z)

    end

end


character.DescendantAdded:Connect(onBodyVelocityAdded)


for _, descendant in pairs(character:GetDescendants()) do

    onBodyVelocityAdded(descendant)

end


player.CharacterAdded:Connect(function(newCharacter)

    character = newCharacter

    humanoidRootPart = character:WaitForChild("HumanoidRootPart")

    character.DescendantAdded:Connect(onBodyVelocityAdded)

   

    for _, descendant in pairs(character:GetDescendants()) do

        onBodyVelocityAdded(descendant)

    end

end)

-- Tp tooooooooooooooolll 
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer


while not LocalPlayer do
    wait()
    LocalPlayer = Players.LocalPlayer
end


local function createTool(name)
    local newTool = Instance.new("Tool")
    newTool.Name = name
    newTool.RequiresHandle = false
    newTool.CanBeDropped = false
    newTool.Parent = LocalPlayer.Backpack
    return newTool
end


local function bindTeleportLogic(tool)
    tool.Activated:Connect(function()
        teleportToClosestPlayer(tool)
    end)
end


local tool = createTool("Time warp")
bindTeleportLogic(tool)


local teleportSound = Instance.new("Sound")
teleportSound.SoundId = "rbxassetid://5066021887"
teleportSound.Volume = 2
teleportSound.Looped = false
teleportSound.PlayOnRemove = false
teleportSound.Parent = LocalPlayer

local teleportAnimation = Instance.new("Animation")
teleportAnimation.AnimationId = "rbxassetid://15957361339"


local teleportDistance = 100


local cooldownTime = 0
local isOnCooldown = false
local originalToolName = tool.Name

local function findClosestPlayer()
    local player = LocalPlayer
    local character = player.Character
    if not character then return nil end

    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return nil end

    local closestPlayer = nil
    local shortestDistance = math.huge

    for _, otherPlayer in pairs(Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local otherHumanoidRootPart = otherPlayer.Character.HumanoidRootPart
            local distance = (humanoidRootPart.Position - otherHumanoidRootPart.Position).magnitude

            
            if (not teleportDistance or distance <= teleportDistance) and distance < shortestDistance then
                shortestDistance = distance
                closestPlayer = otherPlayer
            end
        end
    end

    return closestPlayer, shortestDistance
end

function teleportToClosestPlayer(tool)

    if isOnCooldown then
        warn("LOW ON ENERGY WAIT 5 SECONDS!")
        return
    end

    local player = LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    local closestPlayer, distance = findClosestPlayer()

    if closestPlayer and closestPlayer.Character then
        local closestHumanoidRootPart = closestPlayer.Character:FindFirstChild("HumanoidRootPart")
        if closestHumanoidRootPart then
            local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
            
            if not teleportDistance or distance <= teleportDistance then
                
                isOnCooldown = false

                
                teleportSound:Play()

                
                local animationTrack = humanoid:LoadAnimation(teleportAnimation)
                animationTrack:Play()

                
                humanoidRootPart.CFrame = closestHumanoidRootPart.CFrame * CFrame.new(0, 0, 1)

                
                animationTrack.Stopped:Connect(function()
                    animationTrack:Stop()
                end)
            end
        end
    end
end

-- cool credits
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

local textLabel = Instance.new("TextLabel")
textLabel.Parent = screenGui
textLabel.Text = "MADE BY VIXVI | MOVESET"
textLabel.Size = UDim2.new(0, 300, 0, 100)
textLabel.Position = UDim2.new(0.5, -150, 0, 10)
textLabel.AnchorPoint = Vector2.new(0.5, 0)
textLabel.BackgroundTransparency = 1
textLabel.TextColor3 = Color3.new(1, 1, 1)
textLabel.TextStrokeTransparency = 0.5
textLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
textLabel.Font = Enum.Font.Cartoon
textLabel.TextScaled = true
textLabel.TextTransparency = 1

local stroke = Instance.new("UIStroke")
stroke.Parent = textLabel
stroke.Thickness = 3 -- Thicker outline
stroke.Color = Color3.fromRGB(0, 0, 0)
stroke.Transparency = 0.2

local tweenService = game:GetService("TweenService")

local fadeInTween = tweenService:Create(textLabel, TweenInfo.new(2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextTransparency = 0})
fadeInTween:Play()

-- Useless running
local userInputService = game:GetService("UserInputService")
local runService = game:GetService("RunService")
local tweenService = game:GetService("TweenService")  -- Added TweenService for sound fading
local players = game:GetService("Players")


local player = players.LocalPlayer
local isPC = userInputService.KeyboardEnabled
local isActive = false
local runSoundId = "rbxassetid://1847683491"
local runAnimationId = "rbxassetid://18897115785"
local stopAnimationId = "rbxassetid://13876406148"


local sound = Instance.new("Sound")
sound.SoundId = runSoundId
sound.Looped = true
sound.Volume = 1  -- Default volume set to 1
sound.Parent = player:WaitForChild("PlayerGui")

local tool = Instance.new("Tool")
tool.Name = "Maximum Output"
tool.RequiresHandle = false
tool.Parent = player.Backpack


local animationTrack
local stopAnimationTrack
local moveConnection
local moveSpeed = 250
local initialSpeed = 0.5
local speed = initialSpeed
local elapsedTime = 0
local changeTime = 2.3

local fadeDuration = 1

local trail

local function createTrail(rootPart)
    trail = Instance.new("Trail")
    trail.Attachment0 = Instance.new("Attachment", rootPart)
    trail.Attachment1 = Instance.new("Attachment", rootPart)
    trail.Attachment1.Position = Vector3.new(0, -2, 0)
    trail.Lifetime = 0.5  -- Adjust as needed
    trail.Color = ColorSequence.new(Color3.new(1, 1, 1))
    trail.Transparency = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 0),
        NumberSequenceKeypoint.new(1, 1)
    })
    trail.Enabled = false
    trail.Parent = rootPart
end

local function startMoving(rootPart)
    trail.Enabled = true
    moveConnection = runService.RenderStepped:Connect(function(deltaTime)
        elapsedTime = elapsedTime + deltaTime
        if elapsedTime >= changeTime then
            moveSpeed = 350
        end

        local lookVector = rootPart.CFrame.LookVector
        local newVelocity = lookVector * moveSpeed * speed
        rootPart.Velocity = newVelocity
    end)
end

local function stopMoving(rootPart)
    if moveConnection then
        moveConnection:Disconnect()
        moveConnection = nil
        speed = initialSpeed
        elapsedTime = 0 -- Reset elapsed time
        rootPart.Velocity = Vector3.new(0, 0, 0)
        trail.Enabled = false
    end
end

local function playStopAnimation(humanoid)
    local stopAnimation = Instance.new("Animation")
    stopAnimation.AnimationId = stopAnimationId
    stopAnimationTrack = humanoid:LoadAnimation(stopAnimation)
    stopAnimationTrack:Play()
end

local function fadeOutSound()
    local tweenInfo = TweenInfo.new(fadeDuration)
    local goal = { Volume = 0 }


    local tween = tweenService:Create(sound, tweenInfo, goal)
    tween:Play()

    tween.Completed:Connect(function()
        sound:Stop()
        sound.Volume = 1
    end)
end

local function activate()
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    local rootPart = character:WaitForChild("HumanoidRootPart")

    rootPart.Anchored = false

    if not trail then
        createTrail(rootPart)
    end

    local runAnimation = Instance.new("Animation")
    runAnimation.AnimationId = runAnimationId
    animationTrack = humanoid:LoadAnimation(runAnimation)
    animationTrack:Play()
    animationTrack:AdjustSpeed(1)

    sound:Play()

    startMoving(rootPart)
end

local function deactivate()
    local character = player.Character
    local humanoid = character:WaitForChild("Humanoid")
    local rootPart = character:WaitForChild("HumanoidRootPart")

    if animationTrack then
        animationTrack:Stop()
    end

    fadeOutSound()

    stopMoving(rootPart)

    playStopAnimation(humanoid)
end

local function toggleAbility()
    if not isActive then
        activate()
    else
        deactivate()
    end
    isActive = not isActive
end

local function onKeyPress(input)
    if input.KeyCode == Enum.KeyCode.K then
        toggleAbility()
    end
end

local function onToolActivated()
    toggleAbility()
end

if isPC then
    userInputService.InputBegan:Connect(onKeyPress)
else
    tool.Activated:Connect(onToolActivated)
end

local tool = createTool("Paradox")

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local Workspace = game:GetService("Workspace")

local player = Players.LocalPlayer
local mouse = player:GetMouse()
local camera = Workspace.CurrentCamera

-- Script state variables
local scriptActive = false -- To track if the script is active
local teleportEnabled = false
local mouseConnection
local touchConnection

-- Function to teleport the player
local function teleportToPosition(position)
    if not teleportEnabled then return end -- Ignore if teleportation is disabled

    local character = player.Character or player.CharacterAdded:Wait()
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

    humanoidRootPart.CFrame = CFrame.new(position + Vector3.new(0, 3, 0)) -- Offset slightly above the ground
end

-- Function to stop the script
local function stop()
    if not scriptActive then return end -- Already stopped
    teleportEnabled = false -- Disable teleportation

    -- Disconnect existing connections
    if mouseConnection then
        mouseConnection:Disconnect()
        mouseConnection = nil
    end

    if touchConnection then
        touchConnection:Disconnect()
        touchConnection = nil
    end

    print("Script stopped, teleportation disabled")
end

-- Function to activate the script
local function teleportactivate()
    if scriptActive then return end -- Already active
    teleportEnabled = true -- Enable teleportation

    -- Connect mouse input for PC
    mouseConnection = mouse.Button1Down:Connect(function()
        if teleportEnabled then
            teleportToPosition(mouse.Hit.Position)
        end
    end)

    -- Connect touch input for mobile
    touchConnection = UserInputService.TouchTapInWorld:Connect(function(screenPosition, processed)
        if not teleportEnabled or processed then return end -- Ignore if teleportation is disabled or UI processes touch

        -- Convert 2D screen position to 3D world position
        local ray = camera:ScreenPointToRay(screenPosition.X, screenPosition.Y)
        local rayDirection = ray.Direction * 1000 -- Extend the ray far into the distance
        local raycastResult = Workspace:Raycast(ray.Origin, rayDirection)

        if raycastResult then
            teleportToPosition(raycastResult.Position)
        end
    end)

    print("Script activated, teleportation enabled")
end

local function onKeyPressed(input)
    if input.KeyCode == Enum.KeyCode.P then
        toggleTool()
    end
end

local function toggleTool()
    if not scriptActive then
        teleportactivate()
    else
        stop()
    end
    scriptActive = not scriptActive
end

local function onToolActive()
    toggleTool()
end

if isPC then
    userInputService.InputBegan:Connect(onKeyPressed)
else
    tool.Activated:Connect(onToolActive)
end

local tool = createTool("Domain Expansion")

--- Control variable to enable/disable the script
local scriptActive = true -- Set to true to activate the teleportation sequence

-- Specify the coordinates for teleportation
local teleportX = 1063.89 -- Replace with your desired X coordinate
local teleportY = 131.71 -- Replace with your desired Y coordinate
local teleportZ = 23009.02 -- Replace with your desired Z coordinate

-- Wait for the player's character to load
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

-- Variable to store the original position
local originalPosition = humanoidRootPart.Position

-- Function to save the current position
local function saveCurrentPosition()
    originalPosition = humanoidRootPart.Position
    print(string.format("Saved original position: X=%.2f, Y=%.2f, Z=%.2f", originalPosition.X, originalPosition.Y, originalPosition.Z))
end

-- Function to teleport to the specified coordinates
local function teleportToSpecifiedCoordinates()
    if scriptActive then
        saveCurrentPosition() -- Always save the original position before teleporting
        humanoidRootPart.CFrame = CFrame.new(Vector3.new(teleportX, teleportY, teleportZ))
        print(string.format("Teleported to X=%.2f, Y=%.2f, Z=%.2f", teleportX, teleportY, teleportZ))
    else
        print("Script is not active. Teleportation skipped.")
    end
end

-- Function to return to the original position
local function returnToOriginalPosition()
    if scriptActive then
        if originalPosition then
            humanoidRootPart.CFrame = CFrame.new(originalPosition)
            print(string.format("Returned to original position: X=%.2f, Y=%.2f, Z=%.2f", originalPosition.X, originalPosition.Y, originalPosition.Z))
        else
            warn("Original position is not saved. Unable to return.")
        end
    else
        print("Script is not active. Return skipped.")
    end
end

local function onKeyPressed(input)
    if input.KeyCode == Enum.KeyCode.T then
        toggleTools()
    end
end

local function toggleTools()
    if not scriptActived then
        teleportToSpecifiedCoordinates()
    else
        returnToOriginalPosition()
    end
    scriptActived = not scriptActived
end

local function onToolActived2()
    toggleTools()
end

if isPC then
    userInputService.InputBegan:Connect(onKeyPressed)
else
    tool.Activated:Connect(onToolActived2)
end

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local function updateBarColor()
    local screenGui = playerGui:FindFirstChild("ScreenGui")
    if not screenGui then return end

    local magicHealthFrame = screenGui:FindFirstChild("MagicHealth")
    if not magicHealthFrame then return end

    local healthFrame = magicHealthFrame:FindFirstChild("Health")
    if not healthFrame then return end

    local barFrame = healthFrame:FindFirstChild("Bar")
    if not barFrame then return end

    local imageLabel = barFrame:FindFirstChild("Bar")
    if not imageLabel or not imageLabel:IsA("ImageLabel") then return end

    imageLabel.ImageColor3 = Color3.fromRGB(255, 255, 0)
end

local function onCharacterAdded(character)
    updateBarColor()
end

local function onPlayerAdded()
    local character = player.Character or player.CharacterAdded:Wait()
    onCharacterAdded(character)

    player.CharacterAdded:Connect(onCharacterAdded)
end

Players.PlayerAdded:Connect(onPlayerAdded)
if player then
    onPlayerAdded()
end 

loadstring(game:HttpGet('https://pastebin.com/raw/CvCuY7iC'))()

coroutine.wrap(function()
    local ts = game:GetService("TweenService")
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
 
    local Dialogue = Instance.new("BillboardGui")
    local Chat1 = Instance.new("Frame")
    local Sub = Instance.new("TextLabel")
 
    Dialogue.Active = true
    Dialogue.Size = UDim2.new(15, 0, 15, 0)
    Dialogue.StudsOffset = Vector3.new(0, 0, 2)
    Dialogue.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    Dialogue.Name = "Dialogue"
    Dialogue.Parent = humanoidRootPart
 
    Chat1.AnchorPoint = Vector2.new(0.5, 0.5)
    Chat1.BackgroundColor3 = Color3.new(1, 1, 1)
    Chat1.BorderColor3 = Color3.new(0, 0, 0)
    Chat1.BorderSizePixel = 2
    Chat1.Position = UDim2.new(0.600000024, 0, -0.2, 0)
    Chat1.Size = UDim2.new(0.100000001, 0, 0.200000003, 0)
    Chat1.Name = "Chat1"
    Chat1.BackgroundTransparency = 1
    Chat1.Parent = Dialogue
 
    Sub.FontFace = Font.new("rbxassetid://12187375716", Enum.FontWeight.Bold, Enum.FontStyle.Italic)
    Sub.Text = "I’ll guess I’ll use my full power."
    Sub.TextColor3 = Color3.new(0, 0, 0)
    Sub.TextScaled = true
    Sub.TextSize = 14
    Sub.TextWrapped = true
    Sub.AnchorPoint = Vector2.new(0.5, 0.5)
    Sub.BackgroundColor3 = Color3.new(1, 1, 1)
    Sub.TextTransparency = 1
    Sub.BorderColor3 = Color3.new(0, 0, 0)
    Sub.BorderSizePixel = 0
    Sub.Position = UDim2.new(0.5, 0, 0.5, 0)
    Sub.Size = UDim2.new(0.850000024, 0, 0.349999994, 0)
    Sub.Name = "Sub"
    Sub.Parent = Chat1
 
    game.Debris:AddItem(Chat1, 25)
    game.Debris:AddItem(Sub, 25)
 
    local function tweenProperty(object, properties, time)
        local tweenInfo = TweenInfo.new(time, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
        local tween = ts:Create(object, tweenInfo, properties)
        tween:Play()
        return tween
    end
 
    tweenProperty(Chat1, {BackgroundTransparency = 0}, 1)
    tweenProperty(Sub, {TextTransparency = 0}, 1)
    tweenProperty(Chat1, {Position = UDim2.new(0.6, 0, 0.4, 0)}, 1)
    task.wait(4)
    tweenProperty(Chat1, {BackgroundTransparency = 1}, 2)
    tweenProperty(Sub, {TextTransparency = 1}, 2)
end)()

local char = game.Players.LocalPlayer.Character

getgenv().LArmCol = char['Left Arm'].ChildAdded:Connect(function(pp)
    if pp.Name == 'WaterPalm' then
        for i, v in pairs(pp:WaitForChild('ConstantEmit'):GetChildren()) do
            v.Color = ColorSequence.new{
                ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 0)), 
                ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 255, 0))  
            }
        end

        pp:WaitForChild('WaterTrail').Color = ColorSequence.new{
            ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 0)), 
            ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 255, 0))  
        }
    end
end)

getgenv().CCol = char.ChildAdded:Connect(function(pp)
    if pp.Name == 'Effects' then
        for i = 1, 55 do
            for i, v in pairs(pp:GetDescendants()) do
                if v:IsA('ParticleEmitter') then 
                    v.Color = ColorSequence.new{
                        ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 0)), 
                        ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 255, 0))  
                    }
                end
            end
            task.wait()
        end
    end
end)

getgenv().RArmCol = char['Right Arm'].ChildAdded:Connect(function(pp)
    if pp.Name == 'WaterPalm' then
        for i, v in pairs(pp:WaitForChild('ConstantEmit'):GetChildren()) do
            v.Color = ColorSequence.new{
                ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 0)), 
                ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 255, 0))  
            }
        end

        pp:WaitForChild('WaterTrail').Color = ColorSequence.new{
            ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 0)), 
            ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 255, 0))  
        }
    end
end)

